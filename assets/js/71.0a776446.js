(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{386:function(t,a,s){"use strict";s.r(a);var e=s(3),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" "),a("strong",[t._v("git常用命令")])]),t._v(" "),a("ul",[a("li",[t._v("pwd  //查看当前完整路劲")]),t._v(" "),a("li",[t._v('ssh-keygen -t rsa -b 4096 -C "919006380@qq.com"  //创建ssh钥匙\n'),a("ul",[a("li",[t._v("创建成功最后会出现正方形里面有乱码")])])]),t._v(" "),a("li",[t._v("cd ~/.ssh  //查找ssh文件")]),t._v(" "),a("li",[t._v("mkdir  //创建目录")]),t._v(" "),a("li",[t._v("rm -rf //删除目录")]),t._v(" "),a("li",[t._v("git rm -r --cache 删除远程仓库文件，本地文件不删除")]),t._v(" "),a("li",[t._v("touch a.md  //创建文件")]),t._v(" "),a("li",[t._v("echo “hello” >> a.md  //在文件尾部插入一个字符串，一个“>”代表 覆盖。")]),t._v(" "),a("li",[t._v("git status //查看仓库当前状态")]),t._v(" "),a("li",[t._v("git diff  //是工作区(work dict)和暂存区(stage)的比较")]),t._v(" "),a("li",[t._v("git diff --cached //是暂存区(stage)和分支(master)的比较")]),t._v(" "),a("li",[t._v("git log  //显示最近存档commit日志 “--pretty=oneline”参数显示简化版")]),t._v(" "),a("li",[t._v("git reset --hard HEAD^ //退回上一个版本 ^^两个^等于上上个版本。")]),t._v(" "),a("li",[t._v("git reset --hard 3628164 //切换版本 3628164等于版本号的前几位数字，没必要写全git会自动查找")]),t._v(" "),a("li",[t._v("git reflog // 列出你每一次存档的命令，包括前几位数的版本号")])]),t._v(" "),a("blockquote",[a("p",[t._v("git config --global core.quotepath false //解决中文文件名乱码\ngit config core.ignorecase false   git默认对大小写不敏感，会将大写的名称改成小写提交，可配置为对大小写敏感")])]),t._v(" "),a("h2",{attrs:{id:"三个很有用的-git-命令。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个很有用的-git-命令。"}},[t._v("#")]),t._v(" 三个很有用的 git 命令。")]),t._v(" "),a("ul",[a("li",[t._v("git grep <关键词> ：搜索含有关键词的文件。")]),t._v(" "),a("li",[t._v("git blame <文件名>：查看指定文件每一行的提交人和提交时间。")]),t._v(" "),a("li",[t._v("git log -p <文件名>：查看指定文件的每一次提交和改动。")])]),t._v(" "),a("h2",{attrs:{id:"修改全局用户名和邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改全局用户名和邮箱"}},[t._v("#")]),t._v(" 修改全局用户名和邮箱")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    git config --global user.email "919006380@qq.com"\n    git config --global user.name "weibo"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"查看用户名和地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看用户名和地址"}},[t._v("#")]),t._v(" 查看用户名和地址")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config user.name\ngit config user.email\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"修改完后推送上github三步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改完后推送上github三步代码"}},[t._v("#")]),t._v(" 修改完后推送上github三步代码")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  // 文件进入暂存区，. 表示添加所有已修改的，-A表示添加所有文件包括删除的\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-am")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),t._v(" // 存档，实际上就是把暂存区的所有内容提交到当前分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("其中\n “ ”内写入的是本次提交的说明，可以是任意内容\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push   // push到远端GitHub的master上\n \n --------------常用参数说明------------------------------------\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A:"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [<path>]表示把<path>中所有tracked文件中被修改过或已删除文件和所有untracted的文件信息添加到索引库。省略<path>表示.,即当前目录。")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我们可以通过git add -i 命令查看当前目录中被所有修改过或已删除文件但没有提交的文件，并通过其revert子命令可以查看当前目录中所有untracted的文件，同时进入一个子命令系统。")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看存档并且添加存档信息")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h2",{attrs:{id:"关联远程库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联远程库"}},[t._v("#")]),t._v(" 关联远程库")]),t._v(" "),a("ul",[a("li",[t._v("git remote add origin git@server-name:path/repo-name.git //关联一个远程库\n"),a("ul",[a("li",[t._v("git remote add origin git@github.com:qq919006380/WEBdesignPattern.git")]),t._v(" "),a("li",[t._v("git remote add origin git@github.com:qq919006380/WEBdesignPattern.git")]),t._v(" "),a("li",[t._v("git remote set-url origin git@github.com:qq919006380/WEBdesignPattern.git")])])]),t._v(" "),a("li",[t._v("git remote set-url origin [url] //修改关联一个远程库")]),t._v(" "),a("li",[t._v("git remote rm origin      //删除关联一个远程库")]),t._v(" "),a("li",[t._v("git push origin master// 关联后推送内容")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/06/git_remote.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰远程操作详解"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"上传创库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传创库"}},[t._v("#")]),t._v(" 上传创库")]),t._v(" "),a("ul",[a("li",[t._v("在github官网创建项目，按提示上传")]),t._v(" "),a("li",[t._v("在本地文件输入git init创建git隐藏的跟踪文件")])]),t._v(" "),a("h2",{attrs:{id:"分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),a("ul",[a("li",[t._v("查看分支：git branch")]),t._v(" "),a("li",[t._v("查看分支包括隐藏分支：git branch -a")]),t._v(" "),a("li",[t._v("创建分支：git branch "),a("code",[t._v("<name>")])]),t._v(" "),a("li",[t._v("切换分支：git checkout "),a("code",[t._v("<name>")])]),t._v(" "),a("li",[t._v("创建+切换分支：git checkout -b "),a("code",[t._v("<name>")])]),t._v(" "),a("li",[t._v("合并某分支到当前分支：git merge "),a("code",[t._v("<name>")])]),t._v(" "),a("li",[t._v("删除分支：git branch -d "),a("code",[t._v("<name>")])]),t._v(" "),a("li",[t._v("查看分支合并途：git log --graph")]),t._v(" "),a("li",[t._v("查看远程库的信息：git remote")]),t._v(" "),a("li",[t._v("查看远程库详细的信息：git remote -v")])]),t._v(" "),a("h2",{attrs:{id:"三个状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个状态"}},[t._v("#")]),t._v(" 三个状态")]),t._v(" "),a("ul",[a("li",[t._v("已提交（mommitted）该文件已经被安全地保存在本地数据中了")]),t._v(" "),a("li",[t._v("已修改（modified）修改了某个文件，但还没有提交保存")]),t._v(" "),a("li",[t._v("已缓存（staged）吧已修改的文件放在下次提交时要保存的清单中")])]),t._v(" "),a("h2",{attrs:{id:"三个区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个区"}},[t._v("#")]),t._v(" 三个区")]),t._v(" "),a("ul",[a("li",[t._v("工作区（Working Directory）  //本机电脑能看的目录文件夹，知识库")]),t._v(" "),a("li",[t._v("版本库（Repository）  //工作区有一个隐藏目录.git，这个是版本库")]),t._v(" "),a("li",[t._v("暂存区 //Git的版本库里的stage（或者叫index）的叫暂存区")])]),t._v(" "),a("h2",{attrs:{id:"参见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参见错误"}},[t._v("#")]),t._v(" 参见错误")]),t._v(" "),a("div",{staticClass:"language-log line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-log"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("ssh:")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("connect to host ssh.github.com port 44:")]),t._v(" Connection refused\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fatal:")]),t._v(" Could not read from remote repository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nPlease make sure you have the correct access rights\nand the repository exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("此错误是您网络下的防火墙阻止了某些端口，解决"),a("br"),t._v(" "),a("code",[t._v("vim ~/.ssh/config")]),a("br"),t._v("\n按i进入编辑模式，复制黏贴以下内容")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Host github.com\n Hostname ssh.github.com\n Port 443\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("之后按Esc退出编辑模式，后输入"),a("code",[t._v(":wq")]),t._v("保存退出"),a("br"),t._v("\n运行命令"),a("code",[t._v("ssh -T git@github.com")]),t._v("以确认问题是否已解决。  "),a("a",{attrs:{href:"https://stackoverflow.com/questions/15589682/ssh-connect-to-host-github-com-port-22-connection-timed-out",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考资料"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("需要注意的是有时候执行完上面的命令，问题依然没有解决，最后在我折腾了一个下午之后，发现换一个网络就可以了...之后这个问题再也没有深入研究过了。")]),t._v(" "),a("p",[t._v("过了第好几天之后，发现换了个网也不行了，无奈之下继续排查，发现是"),a("code",[t._v("github dns污染")]),t._v("造成，只需跟换host就可以，"),a("a",{attrs:{href:"https://github.com/521xueweihan/GitHub520",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体参考"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"图形工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形工具"}},[t._v("#")]),t._v(" 图形工具")]),t._v(" "),a("ul",[a("li",[t._v("sourcetree")]),t._v(" "),a("li",[t._v("tortoisegit小乌龟")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jirengu.com/app/watch/382/1?vsum=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("git讲解视频"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰git教程"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.imooc.com/learn/390",target:"_blank",rel:"noopener noreferrer"}},[t._v("github慕课视频"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);